name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on:
    push:
        branches:
        - dev

jobs:


  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.19.0'
    - name: yarn install
      working-directory: ./web3modal/frontend
      run: yarn 
    - name: yarn build
      working-directory: ./web3modal/frontend
      run: CI=false yarn build
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        setuptools
        bump-my-version
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: update version tag in setup.py
      run: |
          CURRENT_TAG=$(python setup.py --version)
          bump-my-version bump --current-version $CURRENT_TAG minor setup.py --allow-dirty
          git config --global user.email "gha@github.com"
          git config --global user.name "github robot"
          git commit -am "update package build version gha"
          git push origin main
             
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://pypi.org/p/st_web3modal  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - uses: actions/checkout@v2
    - name: set tag
        #TODO PR_NUMBER: wat - https://github.com/actions/checkout/issues/58
      run: |
            echo "NEW_TAG=$(python setup.py --version)" >> $GITHUB_ENV
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl      
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        
        gh release create
        '${{ env.NEW_TAG }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ env.NEW_TAG }}' dist/**
        --repo '${{ github.repository }}'

